[[language]]
name = "rust"
language-servers = [ "rust-analyzer", "cspell-lsp" ]

[[language]]
name = "python"
roots = [ "pyproject.toml",
          "setup.py",
          "poetry.lock",
          "pyrightconfig.json",
          "pylintrc",
          ".git" ]
language-servers = [ "pylsp", "cspell-lsp" ]
formatter = { command = "black", args = ["--quiet", "-"] }
auto-format = true

[[language]]
name = "cpp"
roots = [ ".clangd",
          ".clang-tidy",
          ".clang-format",
          "compile_commands.json",
          "compile_flags.txt",
          "configure.ac",
          ".git" ]
language-servers = [ "clangd", "cspell-lsp" ]
auto-format = true

[[language]]
name = "html"
formatter = { command = 'prettier', args = ["--parser", "html"] }
auto-format = true

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }
auto-format = true

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }
auto-format = true

[[language]]
name = "javascript"
language-servers = [ "typescript-language-server", "cspell-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "jsx"
language-servers = [ "typescript-language-server", "cspell-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "typescript"
language-servers = [ "typescript-language-server", "cspell-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "tsx"
language-servers = [ "typescript-language-server", "cspell-lsp" ]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "markdown"
language-servers = [ "marksman", "cspell-lsp" ]

[[language]]
name = "xml"
language-servers = [ "cspell-lsp" ]
file-types = [
  "xml",
  "mobileconfig",
  "plist",
  "xib",
  "storyboard",
  "svg",
  "xsd",
  "gml",
  "xaml",
  "gir",
  "rss",
  "atom",
  "opml",
  "policy",
  "ascx",
  "axml",
  "axaml",
  "bpmn",
  "cpt",
  "csl",
  "csproj.user",
  "dita",
  "ditamap",
  "dtml",
  "fxml",
  "iml",
  "isml",
  "jmx",
  "launch",
  "menu",
  "mxml",
  "nuspec",
  "osc",
  "osm",
  "pt",
  "publishsettings",
  "pubxml",
  "pubxml.user",
  "rbxlx",
  "rbxmx",
  "rng",
  "shproj",
  "tld",
  "tmx",
  "vbproj.user",
  "vcxproj",
  "vcxproj.filters",
  "wsdl",
  "wxi",
  "wxs",
  "xbl",
  "xlf",
  "xliff",
  "xpdl",
  "xul",
  "xoml",
  "musicxml",
  "glif",
  "ui",
# My file extensions
  "urdf",
  "xacro",
  "world"
]

[language-server.pylsp.config]
pylsp.plugins.pylint.enabled = true
pylsp.plugins.pylint.args = ["--disable=missing-function-docstring", "--disable=missing-class-docstring", "--disable=missing-module-docstring"]
pylsp.plugins.flake8.enabled = false
pylsp.plugins.rope.enabled = false
pylsp.plugins.pyflakes.enabled = false
pylsp.plugins.mccabe.enabled = false
pylsp.plugins.pycodestyle.enabled = false
pylsp.plugins.pydocstyle.enabled = false
pylsp.plugins.autopep8.enabled = false
pylsp.plugins.yapf.enabled = false

[language-server.clangd]
args = [ "--clang-tidy", "--query-driver=/home/hwtb/programs/gcc-arm/bin/arm-none-eabi-g++" ]

[language-server.cspell-lsp]
command = "cspell-lsp"
args = [ "--stdio" ]

# https://github.com/vlabo/cspell-lsp
[language-server.cspell-lsp.config]
cSpell.enabled = true
cSpell.language = "en"
cSpell.enabledLanguageIds = [
          "bibtex",
          "clojure",
          "c",
          "cpp",
          "dockercompose",
          "css",
          "dockerfile",
          "go",
          "html",
          "javascript",
          "javascriptreact",
          "json",
          "jsonc",
          "latex",
          "makefile",
          "markdown",
          "plaintext",
          "python",
          "rust",
          "scss",
          "typescript",
          "typescriptreact",
          "xml",
          "yaml",
]
cSpell.customDictionaries = { myWords = { name = "myWords", path = "~/cspell_lsp_words.txt" } }
